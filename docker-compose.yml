version: '3.9'  # Specify the Docker Compose version

services:
  frontend:
    build:
      context: ./src   # Location of your frontend's Dockerfile
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # Expose port 3000 from container to host
    depends_on:
      - backend  # Ensure the backend starts before the frontend

  backend:
    build:
      context: ./server    # Location of your backend's Dockerfile
      dockerfile: Dockerfile
    ports:
      - "8080:8080"    # Expose port 8080 from container to host
    environment:
      - LOANDISK_API_KEY=${LOANDISK_API_KEY}
      - LOANDISK_API_ENDPOINT=${LOANDISK_API_ENDPOINT}
    depends_on:
      - db # Ensure the database starts before the backend

  db:
    image: postgres:14-alpine  # Use the PostgreSQL image
    environment:
      - POSTGRESQL_USER=${postgres}
      - POSTGRESQL_PASSWORD=${postgres}  # Set a strong password in production
      - POSTGRES_DB=postgres           # Database name for your project
    ports:
      - "5432:5432"       # Expose port 5432 from container to host
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persist data even if the container is recreated

volumes:
  pgdata:    # Define a named volume to store the PostgreSQL data
